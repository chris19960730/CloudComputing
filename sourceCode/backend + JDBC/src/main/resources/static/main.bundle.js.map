{"version":3,"sources":["C:/Users/AndreMiller/Desktop/云计算/frontend/src/$_lazy_route_resource lazy","C:/Users/AndreMiller/Desktop/云计算/frontend/src/app/app.component.css","C:/Users/AndreMiller/Desktop/云计算/frontend/src/app/app.component.html","C:/Users/AndreMiller/Desktop/云计算/frontend/src/app/app.component.ts","C:/Users/AndreMiller/Desktop/云计算/frontend/src/app/app.module.ts","C:/Users/AndreMiller/Desktop/云计算/frontend/src/app/app.service.ts","C:/Users/AndreMiller/Desktop/云计算/frontend/src/environments/environment.ts","C:/Users/AndreMiller/Desktop/云计算/frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/AndreMiller/Desktop/云计算/frontend/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/_css-loader@0.28.8@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/AndreMiller/Desktop/云计算/frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-card class=\\\"list\\\">\\n  <div class=\\\"card\\\">\\n    <div>\\n    <mat-card class=\\\"sql-input\\\">\\n      <mat-card-title>SQL</mat-card-title>\\n      <mat-card-content>\\n        select name, location <br>\\n        from customer; <br>\\n      </mat-card-content>\\n    </mat-card>\\n    <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" (click)=\\\"execute1()\\\">EXECUTE</button>\\n    </div>\\n      <div>\\n      <mat-card class=\\\"return\\\">\\n        <mat-card-title>Result From Distributed Database</mat-card-title>\\n        <mat-card-content>\\n          <p  *ngFor=\\\"let res of disRes1; let i = index\\\">\\n          {{res.name}}   --   {{res.location}}\\n          </p>\\n        </mat-card-content>\\n      </mat-card>\\n      <mat-card class=\\\"return\\\">\\n        <mat-card-title>Result From Local Database</mat-card-title>\\n        <mat-card-content>\\n          <p  *ngFor=\\\"let res of localRes1; let i = index\\\">\\n            {{res.name}}   --   {{res.location}}\\n          </p>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n    <div class=\\\"chart\\\" echarts [options]=\\\"options1\\\"></div>\\n  </div>\\n</mat-card>\\n\\n<mat-card class=\\\"list\\\">\\n  <div class=\\\"card\\\">\\n    <div>\\n      <mat-card class=\\\"sql-input\\\">\\n        <mat-card-title>SQL</mat-card-title>\\n        <mat-card-content>\\n          select category, count(category) <br>\\n          from items <br>\\n          group by category;\\n        </mat-card-content>\\n      </mat-card>\\n      <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" (click)=\\\"execute2()\\\">EXECUTE</button>\\n    </div>\\n    <div>\\n      <mat-card class=\\\"return\\\">\\n        <mat-card-title>Result From Distributed Database</mat-card-title>\\n        <mat-card-content>\\n          <p  *ngFor=\\\"let res of disRes2; let i = index\\\">\\n            {{res.category}} -- {{res._c1}}\\n          </p>\\n        </mat-card-content>\\n      </mat-card>\\n      <mat-card class=\\\"return\\\">\\n        <mat-card-title>Result From Local Database</mat-card-title>\\n        <mat-card-content>\\n          <mat-card-content>\\n            <p *ngFor=\\\"let res of localRes2; let i = index\\\">\\n              {{res.category}} -- {{res.count}}\\n            </p>\\n          </mat-card-content>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n    <div class=\\\"chart\\\" echarts [options]=\\\"options2\\\"></div>\\n  </div>\\n</mat-card>\\n\\n<mat-card class=\\\"list\\\">\\n  <div class=\\\"card\\\">\\n    <div>\\n      <mat-card class=\\\"sql-input\\\">\\n        <mat-card-title>SQL</mat-card-title>\\n        <mat-card-content>\\n          select items.name, relation.create_data <br>\\n          from items join relation <br>\\n          on relation.item_id = items.id;\\n        </mat-card-content>\\n      </mat-card>\\n      <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" (click)=\\\"execute3()\\\">EXECUTE</button>\\n    </div>\\n    <div>\\n      <mat-card class=\\\"return\\\">\\n        <mat-card-title>Result From Distributed Database</mat-card-title>\\n        <mat-card-content>\\n          <p  *ngFor=\\\"let res of disRes3; let i = index\\\">\\n            {{res.name}} -- {{res.create_data}}\\n          </p>\\n        </mat-card-content>\\n      </mat-card>\\n      <mat-card class=\\\"return\\\">\\n        <mat-card-title>Result From Local Database</mat-card-title>\\n        <mat-card-content>\\n          <p *ngFor=\\\"let res of localRes3; let i = index\\\">\\n            {{res.name}} -- {{res.create_data}}\\n          </p>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n    <div class=\\\"chart\\\" echarts [options]=\\\"options3\\\"></div>\\n  </div>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/AndreMiller/Desktop/云计算/frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material';\nimport {AppService} from './app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\n\nexport class AppComponent implements OnInit {\n  options1: any;\n  options2: any;\n  options3: any;\n\n  localRes1: any;\n  disRes1: any;\n\n  localRes2: any;\n  disRes2: any;\n\n  localRes3: any;\n  disRes3: any;\n\n  start: any;\n  localEnd: any;\n  disEnd: any;\n\n  xAxisData = ['Comparison'];\n\n  constructor( private snackBar: MatSnackBar, private as: AppService) { }\n\n  ngOnInit() {\n\n  }\n\n  execute1() {\n    let sql = 'select name, location from customer';\n    this.start = new Date().getTime();\n    let that = this;\n    this.as.executeSQLtoLocal(sql)\n      .then(res => {\n        that.localRes1 = res;\n        that.localEnd = new Date().getTime();\n      });\n    this.as.executeSQLtoDistributed(sql)\n      .then(res => {\n        that.disRes1 = res;\n        that.disEnd = new Date().getTime();\n        this.options1 = this.createOptions(that.disEnd - that.start,\n          that.localEnd - that.start);\n        that.snackBar.open('SQL执行完毕', '确定', {\n          duration: 2000,\n        });\n        console.log(that.disEnd - that.start);\n        console.log(that.disEnd);\n        console.log(that.start);\n      });\n  }\n\n  execute2() {\n    let sql = 'select category, count(category) from items group by category';\n    this.start = new Date().getTime();\n    let that = this;\n    this.as.executeSQLtoLocal(sql)\n      .then(res => {\n        that.localRes2 = res;\n        that.localEnd = new Date().getTime();\n      });\n    this.as.executeSQLtoDistributed(sql)\n      .then(res => {\n        that.disRes2 = res;\n        that.disEnd = new Date().getTime();\n        this.options2 = this.createOptions(that.disEnd - that.start,\n          that.localEnd - that.start);\n        that.snackBar.open('SQL执行完毕', '确定', {\n          duration: 2000,\n        });\n        console.log(that.disEnd - that.start);\n        console.log(that.disEnd);\n        console.log(that.start);\n      });\n  }\n\n  execute3() {\n    let sql = 'select items.name, relation.create_data from items join relation on relation.item_id = items.id'\n    this.start = new Date().getTime();\n    let that = this;\n    this.as.executeSQLtoLocal(sql)\n      .then(res => {\n        that.localRes3 = res;\n        that.localEnd = new Date().getTime();\n      });\n    this.as.executeSQLtoDistributed(sql)\n      .then(res => {\n        that.disRes3 = res;\n        that.disEnd = new Date().getTime();\n        this.options3 = this.createOptions(that.disEnd - that.start,\n          that.localEnd - that.start);\n        that.snackBar.open('SQL执行完毕', '确定', {\n          duration: 2000,\n        });\n        console.log(that.disEnd - that.start);\n        console.log(that.disEnd);\n        console.log(that.start);\n      });\n  }\n\n\n  createOptions(data1: number, data2: number) {\n    return new Object({\n      legend: {\n        data: ['hive()', 'postgresSQL(local)'],\n        align: 'left'\n      },\n      tooltip: {},\n      xAxis: {\n        data: this.xAxisData,\n        silent: false,\n        splitLine: {\n          show: false\n        }\n      },\n      width: '200px',\n      heigth: '360px',\n      grid: {\n        left: '17%',\n        right: '10%',\n        bottom: '3%',\n        containLabel: true\n      },\n      yAxis: {},\n      series: [{\n        name: 'local',\n        type: 'bar',\n        data: [data1],\n        animationDelay: function (idx) {\n          return idx * 10;\n        }\n      }, {\n        name: 'distributed',\n        type: 'bar',\n        data: [data2],\n        animationDelay: function (idx) {\n          return idx * 10 + 100;\n        }\n      }],\n      animationEasing: 'elasticOut',\n      animationDelayUpdate: function (idx) {\n        return idx * 5;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/AndreMiller/Desktop/云计算/frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport {AppService} from './app.service';\n\nimport { MatFormFieldModule, MatSnackBarModule, MatCardModule, MatButtonModule } from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgxEchartsModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/AndreMiller/Desktop/云计算/frontend/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  executeSQLtoLocal(sql: string) {\r\n    return this.http.get('/local', {\r\n      params: {\r\n        sql: sql\r\n      }\r\n    }).toPromise();\r\n  }\r\n\r\n  executeSQLtoDistributed(sql: string) {\r\n    return this.http.get('/hive', {\r\n      params: {\r\n        sql: sql\r\n      }\r\n    }).toPromise();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/AndreMiller/Desktop/云计算/frontend/src/app/app.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/AndreMiller/Desktop/云计算/frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/AndreMiller/Desktop/云计算/frontend/src/main.ts"],"sourceRoot":"webpack:///"}